# Job - Seed data (carga datos de prueba)
# Ejecutar SOLO una vez después de crear la DB

apiVersion: batch/v1
kind: Job
metadata:
  name: seed-data
  labels:
    app: seed-data
spec:
  backoffLimit: 2
  ttlSecondsAfterFinished: 300 # Auto-elimina después de 5 minutos

  template:
    metadata:
      labels:
        app: seed-data
    spec:
      restartPolicy: Never

      containers:
        - name: seeder
          image: postgres:15-alpine

          command:
            - /bin/sh
            - -c
            - |
              echo "🌱 Iniciando seed de datos de prueba..."

              # Verificar que las tablas existan
              PGPASSWORD=$DB_PASSWORD psql \
                -h $DB_HOST \
                -p $DB_PORT \
                -U $DB_USER \
                -d $DB_NAME \
                -c "\dt"

              # Insertar ciudades de prueba (si no existen)
              PGPASSWORD=$DB_PASSWORD psql \
                -h $DB_HOST \
                -p $DB_PORT \
                -U $DB_USER \
                -d $DB_NAME \
                << 'EOF'

              -- Insertar solo si la tabla está vacía
              DO $$
              BEGIN
                IF NOT EXISTS (SELECT 1 FROM cities LIMIT 1) THEN
                  INSERT INTO cities (name, country, modern_name, description) VALUES
                  ('Londinium', 'Britannia', 'London', 'Capital de Britannia romana'),
                  ('Lutetia', 'Gallia', 'Paris', 'Ciudad en la Galia'),
                  ('Massilia', 'Gallia', 'Marseille', 'Puerto mediterráneo');
                  
                  RAISE NOTICE '✅ Ciudades de prueba insertadas';
                ELSE
                  RAISE NOTICE '⚠️  Ciudades ya existen, saltando...';
                END IF;
              END $$;

              -- Verificar datos
              SELECT COUNT(*) as total_cities FROM cities;

              EOF

              if [ $? -eq 0 ]; then
                echo "✅ Seed completado exitosamente"
              else
                echo "❌ Seed falló"
                exit 1
              fi

          env:
            - name: DB_HOST
              value: "postgres-service"

            - name: DB_PORT
              value: "5432"

            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB

            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_USER

            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
